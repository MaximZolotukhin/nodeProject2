function startTimer(parts) {
  // parts ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä: ['1h', '30m', '45s']

  let totalSeconds = 0

  for (const part of parts) {
    if (!part || typeof part !== 'string') continue

    const unit = part.slice(-1).toLowerCase()
    const value = parseInt(part, 10)

    if (isNaN(value)) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —á–∏—Å–ª–æ –≤ "${part}"`)
      return
    }

    switch (unit) {
      case 'h':
        totalSeconds += value * 3600
        break
      case 'm':
        totalSeconds += value * 60
        break
      case 's':
        totalSeconds += value
        break
      default:
        console.log(`‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –µ–¥–∏–Ω–∏—Ü–∞: ${unit}. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ h, m, s.`)
        return
    }
  }

  if (totalSeconds <= 0) {
    console.log('‚è∞ –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è.')
    return
  }

  console.log(`‚úÖ –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${totalSeconds} —Å–µ–∫—É–Ω–¥...`)

  setTimeout(() => {
    console.log('üéâ –†–∞–±–æ—Ç–∞ —Ç–∞–π–º–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    process.stdout.write('\x07')
  }, totalSeconds * 1000)
}

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã
const args = process.argv.slice(2)

if (args.length === 0) {
  console.log('–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: node timer.js <–≤—Ä–µ–º—è>\n–ü—Ä–∏–º–µ—Ä: node timer.js 1h 30m 45s')
  process.exit(1)
}

// ‚úÖ –ü–ï–†–ï–î–ê–Å–ú –ú–ê–°–°–ò–í –ù–ê–ü–†–Ø–ú–£–Æ ‚Äî –ë–ï–ó join!
startTimer(args)
